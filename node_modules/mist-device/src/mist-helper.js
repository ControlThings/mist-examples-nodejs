var UcpApp = require('./ucp-application.js').UcpApp;
var Application = require('./mist-helper-application.js').Application;
var debug = require('debug')('MistHelper');

function MistHelper(model, device, descriptor) {
    if (typeof model.model.mist.name !== 'string') {
        console.log("MistDevice: Mist model requires `mist.name` to be string");
        process.exit(0);
    }
    var desc = descriptor ? descriptor : model.descriptor ? model.descriptor : {};
    this.service = this.createService(desc, model.model.mist.name, model.model.mist.desc);
    this.application = new Application(this.service, model, device);
}

MistHelper.prototype.createService = function(o, name, desc) {

    var descriptor = {
        name: name,
        desc: desc,
        wsid: process.env.WSID || name.toLowerCase(),
        version: '0.0.0',
        core: {ws: 'ws://localhost:9090'}
    };
    
    if (o) {
        if (o.name) {
            descriptor.name = o.name;
        }
        if (o.desc) {
            descriptor.desc = o.desc;
        }
        if (o.wsid) {
            descriptor.wsid = o.wsid;
        }
        if (o.protocols) {
            descriptor.protocols = o.protocols;
        }
        if (o.version) {
            descriptor.version = o.verison;
        }
        if (o.core) {
            descriptor.core = o.core;
        }
    }
    debug("MistHelper UcpApp with descriptor:", descriptor);
    return new UcpApp(descriptor);
};

module.exports = {
    MistHelper: MistHelper
};

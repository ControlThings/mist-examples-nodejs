
var sdk = require('wish-sdk');
var debug = require('debug')('test-world');

var HttpApi = require('wish-http-api').HttpApi;
var UcpApp = require('../../src/index.js').UcpApp;
var UcpController = require('./ucp-dummy-controller.js').UcpController;
var Ucp = require('../../src/index.js').UcpDevice;
var UcpFeature = require('../../src/index.js').UcpFeature;
var DummyDevice = require('./ucp-dummy-device.js').DummyDevice;

var World = sdk.World;

var configuration = {
    config: {
        identity: { noload:false } },    
    users: {
        Alice: { hosts:[{apps:[UcpController, HttpApi]}] },
        Bob: { hosts:[{apps:[UcpApp, HttpApi]}] },
        Celine: { hosts:[{apps:[UcpApp, HttpApi]}] },
        David: { hosts:[{apps:[UcpApp, HttpApi]}] }
    }
};
    
World.create(configuration, function(world) {
    coreAlice = world.users['Alice'].hosts[0].core;
    coreBob = world.users['Bob'].hosts[0].core;
    setup = world;

    wuidAlice = setup.users['Alice'].wuid;
    wuidBob = setup.users['Bob'].wuid;

    world.befriendAll(function() {
        world.connectAll(function() {
            run(world);
        });
    });
});

function run(world) {
    debug('Setup running.');

    var controller = world.users['Alice'].hosts[0].apps[0];
   
    var dummyDevice = new DummyDevice();
    var ucp = new Ucp('TestDevice');

    var dimmer = new UcpFeature({
        type: 'uint16',
        label: 'Dimmer',
        unit: '%',
        scale: '0.1',
        data: 6,
        write: function(value, cb) {
            // change dimmer value
            dummyDevice.write('dimmer', value);
            cb(null);
        }
    });
    
    var onOff = new UcpFeature({
        type: 'uint16',
        label: 'Switch',
        unit: 'on/off',
        data: 0,
        write: function(value, cb) {
            // change dimmer value                
            dummyDevice.write('switch', value);
            cb(null);
        }
    });
    
    ucp.addFeature('dimmer', dimmer);
    ucp.addFeature('switch', onOff);
 
    dummyDevice.on('change', function(feature, value) {
        if (feature === 'dimmer') {
            dimmer.deviceUpdate(value);
        } else if (feature === 'switch') {
            onOff.deviceUpdate(value);
        }
    });

    //var interface = new DummyInterface();
    //ucp.attachInterface(interface);
    world.users['Bob'].hosts[0].apps[0].attachUcpDevice(ucp);

    
    
    setTimeout(function() {
        controller.read(0);
        controller.subscribe(0, 'switch');
        controller.model(0);
        controller.write(0, 'switch', 1);
        controller.model(0);
    }, 1700);
    
}
